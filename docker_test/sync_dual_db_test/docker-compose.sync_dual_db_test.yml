services:
  central-dualdb-tds:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: central-dualdb-tds
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Terya12345!
      - MSSQL_PID=Express
    ports:
      - "14330:1433"
    volumes:
      - central_data_staging:/var/opt/mssql
      - ./init:/var/opt/mssql/backup
    networks: [syncnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/1433'"]
      interval: 5s
      timeout: 3s
      retries: 30

  client1-dualdb-tds:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: client1-dualdb-tds
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Terya12345!
      - MSSQL_PID=Express
    ports:
      - "14331:1433"      #"HOST_PORT:CONTAINER_PORT"
    volumes:
      - client1_data_staging:/var/opt/mssql
      - ./init:/var/opt/mssql/backup
    networks: [syncnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/1433'"]
      interval: 5s
      timeout: 3s
      retries: 30

  client2-dualdb-tds:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: client2-dualdb-tds
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Terya12345!
      - MSSQL_PID=Express
    ports:
      - "14332:1433"
    volumes:
      - client2_data_staging:/var/opt/mssql
      - ./init:/var/opt/mssql/backup
    networks: [syncnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/1433'"]
      interval: 5s
      timeout: 3s
      retries: 30

  client3-dualdb-tds:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: client3-dualdb-tds
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Terya12345!
      - MSSQL_PID=Express
    ports:
      - "14333:1433"
    volumes:
      - client3_data_staging:/var/opt/mssql
      - ./init:/var/opt/mssql/backup
    networks: [syncnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/1433'"]
      interval: 5s
      timeout: 3s
      retries: 30

  init-dualdb-tds:
    image: mcr.microsoft.com/mssql-tools
    container_name: init-dualdb-tds
    depends_on:
      central-dualdb-tds:
        condition: service_healthy
      client1-dualdb-tds:
        condition: service_healthy
      client2-dualdb-tds:
        condition: service_healthy
      client3-dualdb-tds:
        condition: service_healthy
    environment:
      - SA_PASSWORD=Terya12345!
    volumes:
      - ./init:/init:ro
    entrypoint: ["bash","-lc","tr -d '\r' </init/init.sh >/tmp/init.sh && bash /tmp/init.sh"]
    networks: [syncnet]
    restart: "no"

  syncserver-dualdb-tds:
    build: ../../SyncServer
    image: dmssyncserver-dualdb:latest
    container_name: syncserver-dualdb-tds
    depends_on:
      central-dualdb-tds:
        condition: service_healthy
    environment:
      - PrimaryDatabaseConnectionString=Server=central-dualdb-tds,1433;Database=TERRADISIENA;User ID=sa;Password=Terya12345!;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True
      - SecondaryDatabaseConnectionString=Server=central-dualdb-tds,1433;Database=ZEUSCFG_TERRADISIENA;User ID=sa;Password=Terya12345!;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    ports:
      - "5202:8080"   #"HOST_PORT:CONTAINER_PORT"
    networks: [syncnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/8080'"]
      interval: 5s
      timeout: 3s
      retries: 60

  syncclient1-dualdb-tds:
    build: ../../SyncClient
    image: dmssyncclient1-dualdb:latest
    container_name: syncclient1-dualdb-tds
    depends_on:
      client1-dualdb-tds:
        condition: service_healthy
      syncserver-dualdb-tds:
        condition: service_healthy
    environment:
      - PrimaryDatabaseConnectionString=Server=client1-dualdb-tds,1433;Database=TERRADISIENA;User ID=sa;Password=Terya12345!;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True
      - SecondaryDatabaseConnectionString=Server=client1-dualdb-tds,1433;Database=ZEUSCFG_TERRADISIENA;User ID=sa;Password=Terya12345!;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True
      - PrimarySyncEndpoint=http://syncserver-dualdb-tds:8080/api/sync/db1
      - SecondarySyncEndpoint=http://syncserver-dualdb-tds:8080/api/sync/db2
    networks: [syncnet]
    restart: unless-stopped

  syncclient2-dualdb-tds:
    build: ../../SyncClient
    image: dmssyncclient2-dualdb:latest
    container_name: syncclient2-dualdb-tds
    depends_on:
      client2-dualdb-tds:
        condition: service_healthy
      syncserver-dualdb-tds:
        condition: service_healthy
    environment:
      - PrimaryDatabaseConnectionString=Server=client2-dualdb-tds,1433;Database=TERRADISIENA;User ID=sa;Password=Terya12345!;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True
      - SecondaryDatabaseConnectionString=Server=client2-dualdb-tds,1433;Database=ZEUSCFG_TERRADISIENA;User ID=sa;Password=Terya12345!;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True
      - PrimarySyncEndpoint=http://syncserver-dualdb-tds:8080/api/sync/db1
      - SecondarySyncEndpoint=http://syncserver-dualdb-tds:8080/api/sync/db2
    networks: [syncnet]
    restart: unless-stopped

  syncclient3-dualdb-tds:
    build: ../../SyncClient
    image: dmssyncclient3-dualdb:latest
    container_name: syncclient3-dualdb-tds
    depends_on:
      client3-dualdb-tds:
        condition: service_healthy
      syncserver-dualdb-tds:
        condition: service_healthy
    environment:
      - PrimaryDatabaseConnectionString=Server=client3-dualdb-tds,1433;Database=TERRADISIENA;User ID=sa;Password=Terya12345!;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True
      - SecondaryDatabaseConnectionString=Server=client3-dualdb-tds,1433;Database=ZEUSCFG_TERRADISIENA;User ID=sa;Password=Terya12345!;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True
      - PrimarySyncEndpoint=http://syncserver-dualdb-tds:8080/api/sync/db1
      - SecondarySyncEndpoint=http://syncserver-dualdb-tds:8080/api/sync/db2
    networks: [syncnet]
    restart: unless-stopped

networks:
  syncnet: {}

volumes:
  central_data_staging: {}
  client1_data_staging: {}
  client2_data_staging: {}
  client3_data_staging: {}